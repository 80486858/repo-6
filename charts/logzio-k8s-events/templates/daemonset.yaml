apiVersion: {{ .Values.apiVersions.daemonset }}
kind: DaemonSet
metadata:
  name: {{.Values.k8sApp}}
  labels:
    k8s-app: {{ .Values.k8sApp }}
    {{- include "logzio-k8s-events.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      k8s-app: {{ .Values.k8sApp }}
      {{- include "logzio-k8s-events.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.k8sApp }}
        version: v1
        {{- include "logzio-k8s-events.labels" . | nindent 4 }}
    spec:
      {{- if .Values.isRBAC }}
      serviceAccountName: {{ template "logzio-k8s-events.serviceAccountName" . }}
      {{- end }}
      terminationGracePeriodSeconds: {{ default "30" .Values.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Values.k8sApp }}
          image: "{{ required "A valid .Values.image.repository is required!" .Values.image.repository }}:{{ tpl .Values.image.tag . }}"
        {{- if (or .Values.secretName .Values.envVars) }}
          env:
          {{- range .Values.envVars }}
            - name: {{ .name | quote }}
            {{- if .value }}
              value: {{ with .value }}{{ tpl . $ | quote }}{{- end }}
            {{- end }}
            {{- if .valueFrom }}
              valueFrom:
            {{ .valueFrom | toYaml | indent 16 }}
            {{- end }}
          {{- end }}
          {{- if .Values.secretName }}
            - name: LOGZIO_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{.Values.secretName}}
                  key: logzio-log-shipping-token
            - name: LOGZIO_LISTENER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: logzio-log-listener
            - name: ENV_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: env-id     
          {{- end }}
        {{- end }}
        {{$resources := .Values.resources }}
        {{- if not $resources -}}
          {{- $resources = dict "limits" (dict "memory" "500Mi") -}}
        {{- else  -}}
          {{- $memLimit := default (dig "requests" "memory" "500Mi" $resources) (dig "limits" "memory" "" $resources) -}}
          {{- $resources = merge $resources (dict "limits" (dict "memory" $memLimit)) -}}
        {{- end -}}
        {{- with $resources }}
          resources:
            {{- toYaml . | nindent 12 }}
        {{- end}}