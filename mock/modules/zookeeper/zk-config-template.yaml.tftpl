replicas: ${zookeeper_replicas}
logging:
  type: inline
  loggers:
    zookeeper.root.logger: ${zookeeper_root_log_level}
resources:
  requests:
    memory: ${request_memory}
    cpu: ${request_cpu}
  limits:
    memory: ${limit_memory}
    cpu: ${limit_cpu}
jvmOptions:
  -Xms: ${jvm_xms}
  -Xmx: ${jvm_xmx}
template:
  podDisruptionBudget:
    maxUnavailable: 0
  pod:
    metadata:
      annotations: %{ for key, value in pod_annotations }
        ${key} : "${value}" %{ endfor }
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: ${node_affinity_key}
                  operator: In
                  values:
                    - ${node_affinity_value}
    tolerations:
      - key: "${node_affinity_key}"
        operator: "Equal"
        value: "${node_affinity_value}"
        effect: "NoSchedule"
  clientService:
    metadata:
      annotations: %{ for key, value in service_annotations }
        ${key} : "${value}" %{ endfor }
storage:
  type: persistent-claim
  size: ${storage_size}
  class: ${storage_class}
  deleteClaim: ${storage_delete_claim}
metricsConfig:
  type: jmxPrometheusExporter
  valueFrom:
    configMapKeyRef:
      name: ${configmap_name}
      key: ${configmap_key}
